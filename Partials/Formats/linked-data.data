{namespace s=Subugoe\Find\ViewHelpers}
<f:comment>
	Create triples for the documents passed.

	Include:
		* monastery information (type, GND, Wikipedia, members)
		* orders the monastery belonged to (name, reference, memebership with time range)
		* locations the monastery was situated at (name, geo-information, diocese, time range)
		* members of the monastery (name, time range, references, membership link)
</f:comment>
<s:linkedData.container
	prefixes="{
		xsd:'http://www.w3.org/2001/XMLSchema#',
		rdf:'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
		rdfs:'http://www.w3.org/2000/01/rdf-schema#',
		owl:'http://www.w3.org/2002/07/owl#',
		foaf:'http://xmlns.com/foaf/0.1/',
		skos:'http://www.w3.org/2004/02/skos/core#',
		gnd:'http://d-nb.info/gnd/',
		dbpedia-ontology:'http://dbpedia.org/ontology/',
		role:'http://purl.org/vocab/participation/schema#',
		prov:'http://www.w3.org/ns/prov#',
		geo:'http://www.w3.org/2003/01/geo/wgs84_pos#',
		kloster:'{f:render(partial:\'GS/Permalink\')}',
		person:'http://personendatenbank.germania-sacra.de/index/gsn/'
	}"
	format="{LDFormat}"
>

	<f:for each="{documents}" as="document">
		<f:alias map="{
			klosterURI: '{f:render(partial:\'GS/Permalink\', arguments:\'{id:document.id}\')}',
			doc: document.fields
		}">
			<s:linkedData.item subject="{klosterURI}" predicate="rdf:type" object="foaf:Organization"/>
			<s:linkedData.item subject="{klosterURI}" predicate="rdf:type" object="prov:Agent"/>
			<s:linkedData.item subject="{klosterURI}" predicate="rdf:type" object="gnd:4031225-2"/>
			<s:linkedData.item subject="gnd:4031225-2" predicate="rdf:type" object="skos:Concept"/>
			<s:linkedData.item subject="gnd:4031225-2" predicate="rdfs:label" language="de">Kloster (Körperschaft)</s:linkedData.item>
			<s:linkedData.item subject="gnd:4031225-2" predicate="rdfs:label" language="en">Monastery (Corporate Body)</s:linkedData.item>

			<s:linkedData.item subject="{klosterURI}" predicate="foaf:name">{doc.kloster}</s:linkedData.item>
			<f:if condition="{doc.patrozinium}">
				<s:linkedData.item subject="{klosterURI}" predicate="skos:altLabel">{doc.patrozinium}</s:linkedData.item>
			</f:if>

			<s:data.transpose
				name="urls"
				arrays="{
					url:doc.url,
					art:doc.url_typ
			}">
				<f:for each="{urls}" as="url">
					<f:if condition="{1:url.art} == {1:'Wikipedia'}">
						<s:linkedData.item subject="{klosterURI}" predicate="foaf:page" object="{url.url}"/>
						<s:linkedData.item subject="{klosterURI}" predicate="rdfs:seeAlso" object="{s:format.regexp(string:url.url, match:'|http://de.wikipedia.org/wiki/|', replace:'http://de.dbpedia.org/resource/')}"/>
					</f:if>
					<f:if condition="{1:url.art} == {1:'GND'}">
						<s:linkedData.item subject="{klosterURI}" predicate="owl:sameAs" object="{url.url}"/>
					</f:if>
				</f:for>
			</s:data.transpose>




			<s:data.transpose
				name="ordens"
				arrays="{
					name: doc.orden,
					ordo: doc.orden_ordo,
					graphik: doc.orden_graphik,
					von: doc.orden_von_von,
					bis: doc.orden_bis_bis,
					gnd: doc.orden_gnd,
					wikipedia: doc.orden_wikipedia,
					uid: doc.kloster_orden_uid
			}">
				<f:for each="{ordens}" as="orden">
					<f:if condition="{orden.gnd}">
						<f:alias map="{
							mitgliedschaftURI:'{klosterURI}#orden-{orden.uid}',
							ordenURI:'gnd:{orden.gnd}'
						}">
							<s:linkedData.item subject="{ordenURI}" predicate="rdf:type" object="foaf:Group"/>
							<s:linkedData.item subject="{ordenURI}" predicate="foaf:member" object="{klosterURI}"/>
							<s:linkedData.item subject="{ordenURI}" predicate="foaf:name" language="de">{orden.name}</s:linkedData.item>
							<f:if condition="{orden.ordo}">
								<s:linkedData.item subject="{ordenURI}" predicate="skos:altLabel">{orden.ordo}</s:linkedData.item>
							</f:if>
							<f:comment>
								TODO: Orden Graphik einbauen (wenn URL stabil)?
								<f:if condition="{orden.graphik}">
									<s:linkedData.item subject="{ordenURI}" predicate="foaf:img">{baseURL}{orden.graphik}</s:linkedData.item>
								</f:if>
							</f:comment>

							<f:if condition="{orden.wikipedia}">
								<s:linkedData.item subject="{ordenURI}" predicate="foaf:page" object="{orden.wikipedia}"/>
								<s:linkedData.item subject="{ordenURI}" predicate="owl:sameAs" object="{s:format.regexp(string:orden.wikipedia, match:'|http://de.wikipedia.org/wiki/|', replace:'http://de.dbpedia.org/resource/')}"/>
							</f:if>

							<s:linkedData.item subject="{mitgliedschaftURI}" predicate="rdf:type" object="role:Role"/>
							<s:linkedData.item subject="{mitgliedschaftURI}" predicate="rdf:type" object="gnd:4114609-8"/>
							<s:linkedData.item subject="gnd:4114609-8" predicate="rdf:type" object="skos:Concept"/>
							<s:linkedData.item subject="gnd:4114609-8" predicate="rdfs:label" language="de">Kloster gehört zu Orden</s:linkedData.item>
							<s:linkedData.item subject="gnd:4114609-8" predicate="rdfs:label" language="en">Monastery belongs to order</s:linkedData.item>
							<s:linkedData.item subject="{mitgliedschaftURI}" predicate="role:holder" object="{klosterURI}"/>
							<s:linkedData.item subject="{ordenURI}" predicate="role:role" object="{mitgliedschaftURI}"/>
							<f:if condition="{orden.bis}">
								<s:linkedData.item subject="{mitgliedschaftURI}" predicate="role:startDate" objectType="xsd:dateTime">{orden.von}-01-01T12:00:00Z</s:linkedData.item>
							</f:if>
							<f:if condition="{orden.bis}">
								<s:linkedData.item subject="{mitgliedschaftURI}" predicate="role:endDate" objectType="xsd:dateTime">{orden.bis}-01-01T12:00:00Z</s:linkedData.item>
							</f:if>
						</f:alias>
					</f:if>
				</f:for>
			</s:data.transpose>




			<s:data.transpose
				name="standorte"
				arrays="{
					ort: doc.ort,
					bistum: doc.bistum,
					bistum_gnd: doc.bistum_gnd,
					koordinaten: doc.koordinaten,
					geonames: doc.geonames,
					von: doc.standort_von_von,
					bis: doc.standort_bis_bis,
					uid: doc.standort_uid
			}">
				<f:for each="{standorte}" as="standort">
					<f:alias map="{
						standortHabenURI:'{klosterURI}#hat-standort-{standort.uid}',
						standortURI:'{klosterURI}#standort-{standort.uid}'
					}">
						<s:linkedData.item subject="{standortHabenURI}" predicate="rdf:type" object="prov:Activity"/>
						<s:linkedData.item subject="{standortHabenURI}" predicate="rdf:type" object="gnd:4143381-6"/>
						<s:linkedData.item subject="gnd:4143381-6" predicate="rdf:type" object="skos:Concept"/>
						<s:linkedData.item subject="gnd:4143381-6" predicate="rdfs:label" language="de">Klostersitz ist in</s:linkedData.item>
						<s:linkedData.item subject="gnd:4143381-6" predicate="rdfs:label" language="en">Monastery is located in</s:linkedData.item>
						<s:linkedData.item subject="{standortHabenURI}" predicate="prov:wasAssociatedWith" object="{klosterURI}"/>

						<f:if condition="{standort.von}">
							<s:linkedData.item subject="{standortHabenURI}" predicate="prov:startedAtTime" objectType="xsd:dateTime">{standort.von}-01-01T12:00:00Z</s:linkedData.item>
						</f:if>
						<f:if condition="{standort.bis}">
							<s:linkedData.item subject="{standortHabenURI}" predicate="prov:endedAtTime" objectType="xsd:dateTime">{standort.bis}-01-01T12:00:00Z</s:linkedData.item>
						</f:if>

						<f:if condition="{standort.geonames}">
							<s:linkedData.item subject="{standortHabenURI}" predicate="prov:atLocation" object="http://sws.geonames.org/{standort.geonames}"/>
						</f:if>

						<s:linkedData.item subject="{standortHabenURI}" predicate="prov:atLocation" object="{standortURI}"/>


						<s:linkedData.item subject="{standortURI}" predicate="rdf:type" object="prov:Location"/>
						<s:linkedData.item subject="{standortURI}" predicate="foaf:name">{standort.ort}</s:linkedData.item>

						<f:if condition="{standort.bistum_gnd}">
							<s:linkedData.item subject="{standortURI}" predicate="dbpedia-ontology:locatedInArea" object="gnd:{standort.bistum_gnd}"/>
						</f:if>

						<f:if condition="{standort.koordinaten}">
							<s:linkedData.item subject="{standortURI}" predicate="geo:lat" objectType="xsd:float"><s:format.regexp match="/^(.*),.*/" replace="\1">{standort.koordinaten}</s:format.regexp></s:linkedData.item>
							<s:linkedData.item subject="{standortURI}" predicate="geo:long" objectType="xsd:float"><s:format.regexp match="/^.*,(.*)/" replace="\1">{standort.koordinaten}</s:format.regexp></s:linkedData.item>
						</f:if>

					</f:alias>
				</f:for>
			</s:data.transpose>




			<s:data.transpose
				name="personen"
				arrays="{
					gso: doc.person_gso,
					name: doc.person_name,
					namensalternativen: doc.person_namensalternativen,
					gnd: doc.person_gnd,
					bezeichnung: doc.person_bezeichnung,
					office_id: doc.person_office_id,
					von: doc.person_von,
					bis: doc.person_bis
			}">
				<f:for each="{personen}" as="person">
					<f:alias map="{
						personURI:'person:{person.gso}'
						roleURI:'person:{person.gso}#amt-{person.office_id}'
					}">
						<s:linkedData.item subject="{personURI}" predicate="rdf:type" object="foaf:Person"/>
						<s:linkedData.item subject="{personURI}" predicate="foaf:name">{person.name}</s:linkedData.item>
						<f:if condition="{person.namensalternativen}">
							<f:for each="{s:data.split(string:person.namensalternativen, separator:'; ')}" as="namensalternative">
								<s:linkedData.item subject="{personURI}" predicate="skos:altLabel">{namensalternative}</s:linkedData.item>
							</f:for>
						</f:if>
						<f:if condition="{person.gnd}">
							<s:linkedData.item subject="{personURI}" predicate="owl:sameAs" object="gnd:{person.gnd}"/>
						</f:if>
						<s:linkedData.item subject="{klosterURI}" predicate="foaf:member" object="{personURI}"/>
						<s:linkedData.item subject="{roleURI}" predicate="rdf:type" object="role:Role"/>
						<s:linkedData.item subject="{roleURI}" predicate="role:holder" object="{personURI}"/>
						<s:linkedData.item subject="{klosterURI}" predicate="role:role" object="{roleURI}"/>
						<f:if condition="person.bezeichnung">
							<s:linkedData.item subject="{roleURI}" predicate="foaf:name" language="de">{person.bezeichnung}</s:linkedData.item>
						</f:if>
						<f:if condition="{person.von}">
							<s:linkedData.item subject="{roleURI}" predicate="role:startDate" objectType="xsd:dateTime">{person.von}-01-01T12:00:00Z</s:linkedData.item>
						</f:if>
						<f:if condition="{person.bis}">
							<s:linkedData.item subject="{roleURI}" predicate="role:endDate" objectType="xsd:dateTime">{person.bis}-01-01T12:00:00Z</s:linkedData.item>
						</f:if>
					</f:alias>
				</f:for>
			</s:data.transpose>
		</f:alias>
	</f:for>
</s:linkedData.container>